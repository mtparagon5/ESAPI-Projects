<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VMS.TPS.Common.Model.Types</name>
    </assembly>
    <members>
        <member name="T:VMS.TPS.Common.Model.Types.OptimizationOptionsBase">
            <summary>
            Abstract base class for IMRT and VMAT optimization options.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.OptimizationOptionsBase.m_mlcId">
            <summary>
            Identifier for the Multileaf Collimator (MLC).
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.OptimizationOptionsBase.m_startOption">
            <summary>
            Initial state for the optimizer.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.OptimizationOptionsBase.m_intermediateDoseOption">
            <summary>
            Use of intermediate dose in optimization.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.OptimizationOptionsBase.MLC">
            <summary>
            Identifier for the Multileaf Collimator (MLC). This can be left empty if there is exactly one MLC configured.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.OptimizationOptionsBase.StartOption">
            <summary>
            The state at the beginning of the optimization.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.OptimizationOptionsBase.IntermediateDoseOption">
            <summary>
            Use of intermediate dose in optimization.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.LMCVOptions">
            <summary>
            Options for calculating leaf motions using the Varian Leaf Motion Calculator (LMCV) algorithm.
            </summary>
            <seealso cref="M:VMS.TPS.Common.Model.API.PlanSetup.SetCalculationModel(VMS.TPS.Common.Model.Types.CalculationType,System.String)">SetCalculationOption</seealso>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.LMCVOptions.#ctor(System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="fixedJaws">Use the Fixed jaws option.</param>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.LMCVOptions.FixedJaws">
            <summary>
            Use the Fixed jaws option.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.SmartLMCOptions">
            <summary>
            Options for calculating leaf motions using the Varian Smart LMC algorithm.
            </summary>
            <seealso cref="M:VMS.TPS.Common.Model.API.PlanSetup.SetCalculationModel(VMS.TPS.Common.Model.Types.CalculationType,System.String)">SetCalculationOption</seealso>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.SmartLMCOptions.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="fixedFieldBorders">Use the Fixed field borders option. See details in Eclipse Algorithms Reference Guide.</param>
            <param name="jawTracking">Use the Jaw tracking option. See details in Eclipse Algorithms Reference Guide.</param>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.SmartLMCOptions.FixedFieldBorders">
            <summary>
            Use the Fixed field borders option.
            See details in Eclipse Algorithms Reference Guide.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.SmartLMCOptions.JawTracking">
            <summary>
            Use the Jaw tracking option.
            See details in Eclipse Algorithms Reference Guide.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.LMCMSSOptions">
            <summary>
            Options for calculating leaf motions using the non-Varian MSS Leaf Motion Calculator (LMCMSS) algorithm.
            </summary>
            <seealso cref="M:VMS.TPS.Common.Model.API.PlanSetup.SetCalculationModel(VMS.TPS.Common.Model.Types.CalculationType,System.String)">SetCalculationOption</seealso>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.LMCMSSOptions.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="numberOfIterations">The number of calculation iterations.</param>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.LMCMSSOptions.NumberOfIterations">
            <summary>
            The number of calculation iterations.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.OptimizationOptionsVMAT">
            <summary>
            Options for VMAT optimization.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.OptimizationOptionsVMAT.#ctor(VMS.TPS.Common.Model.Types.OptimizationOption,System.String)">
            <summary>
            Perform VMAT optimization using a specific starting condition.
            </summary>
            <param name="startOption">Initial state for the optimizer.</param>
            <param name="mlcId">Identifier for the Multileaf Collimator (MLC).</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.OptimizationOptionsVMAT.#ctor(VMS.TPS.Common.Model.Types.OptimizationIntermediateDoseOption,System.String)">
            <summary>
            Perform a single cycle of VMAT optimization. Intermediate dose is optionally calculated after multi-resolution level 3.
            </summary>
            <param name="intermediateDoseOption">Intermediate dose option.</param>
            <param name="mlcId">Identifier for the Multileaf Collimator (MLC).</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.OptimizationOptionsVMAT.#ctor(System.Int32,System.String)">
            <summary>
            Perform a user-specified number of VMAT optimization cycles. During the first round, the intermediate dose is calculated after multi-resolution level 3, and 
            the optimization re-starts at multi-resolution level 4. The subsequent rounds calculate first the intermediate dose and start the optimization from multi-resolution level 4.
            </summary>
            <param name="numberOfCycles">Number of VMAT optimization cycles.</param>
            <param name="mlcId">Identifier for the Multileaf Collimator (MLC).</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.OptimizationOptionsVMAT.#ctor(VMS.TPS.Common.Model.Types.OptimizationOption,VMS.TPS.Common.Model.Types.OptimizationIntermediateDoseOption,System.Int32,System.String)">
            <summary>
            For the internal use of the Eclipse Scripting API.
            </summary>
            <param name="startOption">Initial state for the optimizer.</param>
            <param name="intermediateDoseOption">Intermediate dose option.</param>
            <param name="numberOfCycles">Number of VMAT optimization cycles.</param>
            <param name="mlcId">Identifier for the Multileaf Collimator (MLC).</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.OptimizationOptionsVMAT.#ctor(VMS.TPS.Common.Model.Types.OptimizationOptionsVMAT)">
            <summary>
            Copy Constructor.
            </summary>
            <param name="options">An options object that is copied.</param>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.OptimizationOptionsVMAT.NumberOfOptimizationCycles">
            <summary>
            Number of VMAT optimization cycles.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.VVector">
            <summary>
            Represents a displacement in 3D space.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.VVector.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructs a VVector.
            </summary>
            <param name="xi">X component.</param>
            <param name="yi">Y component.</param>
            <param name="zi">Z component.</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.VVector.Distance(VMS.TPS.Common.Model.Types.VVector,VMS.TPS.Common.Model.Types.VVector)">
            <summary>
            The distance between the locations represented by the given VVectors.
            </summary>
            <param name="left">First operand.</param>
            <param name="right">Second operand</param>
            <returns>Returns the distance between the locations represented by the given VVectors.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.VVector.ScaleToUnitLength">
            <summary>
            Scales this VVector so that its length becomes equal to unity.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.VVector.ScalarProduct(VMS.TPS.Common.Model.Types.VVector)">
            <summary>
            The scalar product of this VVector and the given VVector.
            </summary>
            <param name="left">VVector that is second operand of the scalar product.</param>
            <returns>Returns the scalar product of this VVector with the given VVector.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.VVector.op_Subtraction(VMS.TPS.Common.Model.Types.VVector,VMS.TPS.Common.Model.Types.VVector)">
            <summary>
            The subtraction of VVectors.
            </summary>
            <param name="left">First operand.</param>
            <param name="right">Second operand.</param>
            <returns>Result of subtraction.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.VVector.op_Addition(VMS.TPS.Common.Model.Types.VVector,VMS.TPS.Common.Model.Types.VVector)">
            <summary>
            The addition of VVectors.
            </summary>
            <param name="left">First operand.</param>
            <param name="right">Second operand.</param>
            <returns>Result of addition.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.VVector.op_Multiply(VMS.TPS.Common.Model.Types.VVector,System.Double)">
            <summary>
            The multiplication of a VVector and a double.
            </summary>
            <param name="val">VVector to multiply.</param>
            <param name="mul">Multiplier.</param>
            <returns>Result of multiplication.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.VVector.op_Multiply(System.Double,VMS.TPS.Common.Model.Types.VVector)">
            <summary>
            The multiplication of a VVector and a double.
            </summary>
            <param name="val">VVector to multiply.</param>
            <param name="mul">Multiplier.</param>
            <returns>Result of multiplication.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.VVector.op_Division(VMS.TPS.Common.Model.Types.VVector,System.Double)">
            <summary>
            The division of a VVector by a double.
            </summary>
            <param name="val">VVector to divide.</param>
            <param name="div">Divisor.</param>
            <returns>Result of division.</returns>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.VVector.Item(System.Int32)">
            <summary>
            Indexing for the x, y and z components.
            </summary>
            <param name="i">Value of 0,1 or 2 that correspond to x,y and z components.</param>
            <returns>Returns the given component of this VVector.</returns>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.VVector.LengthSquared">
            <summary>
            The square of the length of the VVector.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.VVector.Length">
            <summary>
            The length of the VVector.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.VVector.x">
            <summary>
            The X component of the VVector.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.VVector.y">
            <summary>
            The Y component of the VVector.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.VVector.z">
            <summary>
            The Z component of the VVector.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.IDoseValueDisplaySettings">
            <summary>
            Application specific dose value display settings.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.IDoseValueDisplaySettings.Decimals(VMS.TPS.Common.Model.Types.DoseValue.DoseUnit)">
            <summary>
            Determines how many decimals to use to display a dosevalue with specified unit.
            </summary>
            <param name="unit">DoseUnit for which the number of decimals is requested.</param>
            <returns>Number of decimals to use for the dose unit.</returns>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.DoseValueDisplayConfig">
            <summary>
            Configure the settings related to the dose value display for the application.
            Defaults to the same settings as Eclipse.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DoseValueDisplayConfig.Decimals(VMS.TPS.Common.Model.Types.DoseValue.DoseUnit)">
            <summary>
            Get number of decimals to user for dosevalue of the defined dose unit
            </summary>
            <param name="unit">DoseUnit for which the number of decimals is requested.</param>
            <returns>Configured number of decimals to use.</returns>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.DoseValueDisplayConfig.DisplaySettings">
            <summary>
            Get and set current dosevalue display settings.
            Set settings controller to null reverts to default display settings.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DoseValueDisplayConfig.DefaultDoseValueSettings.Decimals(VMS.TPS.Common.Model.Types.DoseValue.DoseUnit)">
            <summary>
            Determines how many decimals to use to display a dosevalue with specified unit.
            </summary>
            <param name="unit">DoseUnit for which the number of decimals is requested.</param>
            <returns>Number of decimals to use for the dose unit.</returns>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.DoseValue">
            <summary>
            Represents a dose value.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DoseValue.#ctor(System.Double,System.String)">
            <summary>
            Constructs a DoseValue.
            </summary>
            <param name="value">Value for this instance.</param>
            <param name="unitName">String that corresponds to one of the enumeration values of DoseUnit.</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DoseValue.#ctor(System.Double,VMS.TPS.Common.Model.Types.DoseValue.DoseUnit)">
            <summary>
            Constructs a DoseValue.
            </summary>
            <param name="value">Value for this instance</param>
            <param name="unit">Unit of this instance.</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DoseValue.op_Subtraction(VMS.TPS.Common.Model.Types.DoseValue,VMS.TPS.Common.Model.Types.DoseValue)">
            <summary>
            Subtraction of dose values.
            </summary>
            <param name="dv1">First operand.</param>
            <param name="dv2">Second operand.</param>
            <returns>Subtraction result.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DoseValue.op_Addition(VMS.TPS.Common.Model.Types.DoseValue,VMS.TPS.Common.Model.Types.DoseValue)">
            <summary>
            Addition of dose values.
            </summary>
            <param name="dv1">First operand.</param>
            <param name="dv2">Second operand.</param>
            <returns>Result of addition.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DoseValue.op_Multiply(VMS.TPS.Common.Model.Types.DoseValue,System.Double)">
            <summary>
            Multiplication of a dose value and a double.
            </summary>
            <param name="dv">DoseValue to multiply.</param>
            <param name="dbl">Multiplier.</param>
            <returns>Result of multiplication.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DoseValue.op_Multiply(System.Double,VMS.TPS.Common.Model.Types.DoseValue)">
            <summary>
            Multiplication of a dose value and a double.
            </summary>
            <param name="dbl">Multiplier.</param>
            <param name="dv">DoseValue to multiply.</param>
            <returns>Result of Multiplication.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DoseValue.op_Division(VMS.TPS.Common.Model.Types.DoseValue,System.Double)">
            <summary>
            Division of a dose value by a double.
            </summary>
            <param name="dv">Dividend.</param>
            <param name="dbl">Divisor.</param>
            <returns>Result of division.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DoseValue.op_Division(VMS.TPS.Common.Model.Types.DoseValue,VMS.TPS.Common.Model.Types.DoseValue)">
            <summary>
            Division of two dose values.
            </summary>
            <param name="dv1">Dividend.</param>
            <param name="dv2">Divisor.</param>
            <returns>Result of division.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DoseValue.ToString">
            <summary>
            A string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DoseValue.UndefinedDose">
            <summary>
            A dose value, for which the value is Double.NaN and  
            the unit is unknown. 
            </summary>
            <returns>Undefined dose value.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DoseValue.GetSchema">
            <summary>
            This member is internal to the Eclipse Scripting API.
            </summary>
            <returns>XmlSchema.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DoseValue.ReadXml(System.Xml.XmlReader)">
            <summary>
            This member is internal to the Eclipse Scripting API.
            </summary>
            <param name="reader">XmlReader.</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DoseValue.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serialization support.
            </summary>
            <param name="writer">The System.Xml.XmlWriter stream to which the object is serialized.</param>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.DoseValue.Dose">
            <summary>
            The value of this instance.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.DoseValue.Unit">
            <summary>
            The unit of this instance.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.DoseValue.UnitAsString">
            <summary>
            The unit of this instance as a string.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.DoseValue.ValueAsString">
            <summary>
            The value of this instance as a string.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.DoseValue.Decimals">
            <summary>
            The display precision of this value
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.DoseValue.DoseUnit">
            <summary>
            The unit of the dose value.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.DoseValue.DoseUnit.Unknown">
            <summary>Unknown unit.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.DoseValue.DoseUnit.Gy">
            <summary>Grays.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.DoseValue.DoseUnit.cGy">
            <summary>Centigrays.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.DoseValue.DoseUnit.Percent">
            <summary>Percent.</summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.VRect`1">
            <summary>
            Represents a rectangle.
            </summary>
            <typeparam name="T">Type of the values in the rectangle.</typeparam>
            <remarks>
            Currently limited to value types.
            </remarks>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.VRect`1.#ctor(`0,`0,`0,`0)">
            <summary>
            Constructs a VRect.
            </summary>
            <param name="x1">X1 coordinate of the rectangle.</param>
            <param name="y1">Y1 coordinate of the rectangle.</param>
            <param name="x2">X2 coordinate of the rectangle.</param>
            <param name="y2">Y2 coordinate of the rectangle.</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.VRect`1.ToString">
            <summary>
            A string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.VRect`1.Equals(System.Object)">
            <summary>
            Checks if this object is equal to another object.
            </summary>
            <param name="obj">The other object to compare.</param>
            <returns>True if this object equals to the other object. Otherwise false.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.VRect`1.Equals(VMS.TPS.Common.Model.Types.VRect{`0})">
            <summary>
            Checks if this object is equal to another VRect object.
            </summary>
            <param name="other">The other object to compare.</param>
            <returns>True if this object equals to the other object. Otherwise false.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.VRect`1.op_Equality(VMS.TPS.Common.Model.Types.VRect{`0},VMS.TPS.Common.Model.Types.VRect{`0})">
            <summary>
            Equality operator for VRect.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns>True if left is equal to right. Otherwise false.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.VRect`1.op_Inequality(VMS.TPS.Common.Model.Types.VRect{`0},VMS.TPS.Common.Model.Types.VRect{`0})">
            <summary>
            Inequality operator for VRect.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns>True if left is not equal to right. Otherwise false.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.VRect`1.GetHashCode">
            <summary>
            Returns the hash code for this instance. Overrides Object.GetHashCode.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.VRect`1.X1">
            <summary>
            The X1-coordinate of the rectangle.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.VRect`1.Y1">
            <summary>
            The Y1-coordinate of the rectangle.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.VRect`1.X2">
            <summary>
            The X2-coordinate of the rectangle.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.VRect`1.Y2">
            <summary>
            The Y2-coordinate of the rectangle.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.StructureCodeInfo">
            <summary>
            Represents structure code information.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.StructureCodeInfo.#ctor(System.String,System.String)">
            <summary>
            Constructs a StructureCodeInfo.
            </summary>
            <param name="codingScheme">The coding scheme of the structure code.</param>
            <param name="code">The structure code as defined in the associated coding scheme.</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.StructureCodeInfo.ToString">
            <summary>
            A string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.StructureCodeInfo.Equals(System.Object)">
            <summary>
            Checks if this object is equal to another object.
            </summary>
            <param name="obj">The other object to compare.</param>
            <returns>True if this object equals to the other object. Otherwise false.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.StructureCodeInfo.GetHashCode">
            <summary>
            Returns the hash code for this instance. Overrides Object.GetHashCode.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.StructureCodeInfo.op_Equality(VMS.TPS.Common.Model.Types.StructureCodeInfo,VMS.TPS.Common.Model.Types.StructureCodeInfo)">
            <summary>
            Equality operator for StructureCodeInfo.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>True if left is equal to right. Otherwise false.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.StructureCodeInfo.op_Inequality(VMS.TPS.Common.Model.Types.StructureCodeInfo,VMS.TPS.Common.Model.Types.StructureCodeInfo)">
            <summary>
            Inequality operator for StructureCodeInfo.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>True if left is not equal to right. Otherwise false.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.StructureCodeInfo.Equals(VMS.TPS.Common.Model.Types.StructureCodeInfo)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>True if the current object is equal to the other object. Otherwise, false.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.StructureCodeInfo.GetSchema">
            <summary>
            This member is internal to the Eclipse Scripting API.
            </summary>
            <returns>XmlSchema.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.StructureCodeInfo.ReadXml(System.Xml.XmlReader)">
            <summary>
            This member is internal to the Eclipse Scripting API.
            </summary>   
            <param name="reader">The XmlReader stream from which the object is deserialized.</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.StructureCodeInfo.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serialization support.
            </summary>
            <param name="writer">The System.Xml.XmlWriter stream to which the object is serialized.</param>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.StructureCodeInfo.CodingScheme">
            <summary>
            The coding scheme of the structure code.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.StructureCodeInfo.Code">
            <summary>
            The structure code as defined in the associated coding scheme.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.ExternalBeamMachineParameters">
            <summary>
            The parameters for the external beam treatment unit.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.ExternalBeamMachineParameters.#ctor(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Assigns the parameters to the properties.
            </summary>
            <param name="doseRate">Dose rate value.</param>
            <param name="energyModeId">The energy mode identifier. For example, "6X", or "18X".</param>
            <param name="machineId">The treatment unit identifier.</param>
            <param name="primaryFluenceModeId">Primary Fluence Mode ID. Acceptable values are: null, empty string, "SRS","FFF".</param>
            <param name="techniqueId">Technique identifier. Typically "STATIC" or "ARC".</param>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.ExternalBeamMachineParameters.MachineId">
            <summary>
            The treatment unit identifier.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.ExternalBeamMachineParameters.EnergyModeId">
            <summary>
            The energy mode identifier.
            For example, "6X", or "18X".
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.ExternalBeamMachineParameters.DoseRate">
            <summary>
            Dose rate value.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.ExternalBeamMachineParameters.PrimaryFluenceModeId">
            <summary>
            Primary Fluence Mode identifier.
            Acceptable values are: null, empty string, "SRS","FFF".
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.ExternalBeamMachineParameters.TechniqueId">
            <summary>
            Technique identifier.
            Typically "STATIC" or "ARC".
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.DVHPoint">
            <summary>
            Represents a value on a Dose Volume Histogram (DVH) curve.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DVHPoint.#ctor(VMS.TPS.Common.Model.Types.DoseValue,System.Double,System.String)">
            <summary>
            Constructs a DVHPoint. 
            </summary>
            <param name="dose">Dose value of the point.</param>
            <param name="volume">Volume value of the point.</param>
            <param name="volumeUnit">Unit of volume.</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DVHPoint.GetSchema">
            <summary>
            This member is internal to the Eclipse Scripting API.
            </summary>
            <returns>XmlSchema.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DVHPoint.ReadXml(System.Xml.XmlReader)">
            <summary>
            This member is internal to the Eclipse Scripting API.
            </summary>
            <param name="reader">XmlReader.</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DVHPoint.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serialization support.
            </summary>
            <param name="writer">The System.Xml.XmlWriter stream to which the object is serialized.</param>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.DVHPoint.DoseValue">
            <summary>
            The dose value of the point.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.DVHPoint.Volume">
            <summary>
            The volume value of the point.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.DVHPoint.VolumeUnit">
            <summary>
            The volume unit of the point.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.SegmentProfilePoint">
            <summary>
            Represents a point of a segment profile.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.SegmentProfilePoint.#ctor(VMS.TPS.Common.Model.Types.VVector,System.Boolean)">
            <summary>
            Constructs a SegmentProfilePoint. 
            </summary>
            <param name="position">Position of the point.</param>
            <param name="value">Value of the point.</param>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.SegmentProfilePoint.Position">
            <summary>
            The position of the point.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.SegmentProfilePoint.Value">
            <summary>
            The value of the point: true if the point is inside the segment, false otherwise.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.SegmentProfile">
            <summary>
            Represents the segment values along a line segment.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.SegmentProfile.#ctor(VMS.TPS.Common.Model.Types.VVector,VMS.TPS.Common.Model.Types.VVector,System.Collections.BitArray)">
            <summary>
            Constructs a SegmentProfile.
            </summary>
            <param name="origin">Origin, i.e. position of first point of the profile.</param>
            <param name="step">Step length and direction between points on the profile.</param>
            <param name="data">Array of values of the profile.</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.SegmentProfile.GetEnumerator">
            <summary>
            An enumerator for points in the profile.
            </summary>
            <returns>Enumerator for points in the profile.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.SegmentProfile.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            A non-generic version of the enumerator for points in the profile.
            </summary>
            <returns>Enumerator for points in the profile.</returns>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.SegmentProfile.Item(System.Int32)">
            <summary>
            Gets a specified point from the profile.
            </summary>
            <param name="index">Zero based index of the point to retrieve.</param>
            <returns>Point at the given index.</returns>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.SegmentProfile.Count">
            <summary>
            The number of points in the profile.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.SegmentProfile.EdgeCoordinates">
            <summary>
            Returns the coordinates of the edges of the segment along
            the segment profile. 
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.DosimeterUnit">
            <summary>
            The dosimeter unit.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.DosimeterUnit.Null">
            <summary>Null unit, undefined.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.DosimeterUnit.MU">
            <summary>Monitor Units.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.DosimeterUnit.Minute">
            <summary>Minutes.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.DosimeterUnit.Second">
            <summary>Seconds.</summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.MetersetValue">
            <summary>
            Represents a meterset value.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.MetersetValue.#ctor(System.Double,VMS.TPS.Common.Model.Types.DosimeterUnit)">
            <summary>
            Constructs a MetersetValue.
            </summary>
            <param name="value">Value for this instance.</param>
            <param name="unit">Unit for this instance.</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.MetersetValue.GetSchema">
            <summary>
            This member is internal to the Eclipse Scripting API.
            </summary>
            <returns>XmlSchema.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.MetersetValue.ReadXml(System.Xml.XmlReader)">
            <summary>
            This member is internal to the Eclipse Scripting API.
            </summary>
            <param name="reader">XmlReader.</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.MetersetValue.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serialization support.
            </summary>
            <param name="writer">The System.Xml.XmlWriter stream to which the object is serialized.</param>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.MetersetValue.Value">
            <summary>
            The value of this instance.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.MetersetValue.Unit">
            <summary>
            The unit of this instance.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.PlanType">
            <summary>
            The enumeration of plan types.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanType.ExternalBeam">
            <summary>External beam.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanType.ExternalBeam_IRREG">
            <summary>External beam, Irregular field calculation.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanType.ExternalBeam_Proton">
            <summary>External beam, Proton.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanType.Brachy">
            <summary>Brachytherapy.</summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.MLCPlanType">
            <summary>
            The enumeration of Multileaf Collimator (MLC) techniques.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.MLCPlanType.Static">
            <summary>The MLC shape is static during the beam-on.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.MLCPlanType.DoseDynamic">
            <summary>
            The MLC shape and dose per degree are changed dynamically during the beam-on. The gantry does not rotate.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.MLCPlanType.ArcDynamic">
            <summary>
            The MLC shape is changed dynamically during the beam-on. The dose per degree is kept constant. The gantry rotates.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.MLCPlanType.VMAT">
            <summary>
            The MLC shape and dose per degree are changed dynamically during the beam-on.
            This MLC type is used in RapidArc and other VMAT fields. 
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.MLCPlanType.ProtonLayerStacking">
            <summary>Proton layer stacking.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.MLCPlanType.NotDefined">
            <summary>Undefined MLC Plan type.</summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.PlanSetupApprovalStatus">
            <summary>
            The enumeration of plan approval statuses.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanSetupApprovalStatus.Rejected">
            <summary>Rejected for actual use in treatment, unlocked in the database.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanSetupApprovalStatus.UnApproved">
            <summary>Unapproved, unlocked in the database.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanSetupApprovalStatus.Reviewed">
            <summary>
            Has typically been initially verified, but still requires further approvals,
            locked in the database.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanSetupApprovalStatus.PlanningApproved">
            <summary>
            Intended to be used for the treatment of a patient, locked in the database.
            Must be scheduled and given the Treatment Approval status to use it for the actual patient treatment.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanSetupApprovalStatus.TreatmentApproved">
            <summary>Intended to be used for the treatment of a patient, limited changes are allowed.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanSetupApprovalStatus.CompletedEarly">
            <summary>Completed early status.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanSetupApprovalStatus.Completed">
            <summary>Completed status.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanSetupApprovalStatus.Retired">
            <summary>
            The original plan is set to the Retired state when a revision is created. 
            No changes are possible to Retired plans. 
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanSetupApprovalStatus.UnPlannedTreatment">
            <summary>Unplanned treatment status.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanSetupApprovalStatus.ExternallyApproved">
             <summary>
             Refers to an imported plan that has the approval status in its DICOM data.
             Locked in the database, and managed in the same way as Planning Approved plans.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanSetupApprovalStatus.Unknown">
            <summary>Unknown status.</summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.PlanSumOperation">
            <summary>
            PlanSum operation for PlanSetups in PlanSum. 
            Indicates whether the plan is summed with (“+”) or subtracted from (“-”) the other plans in the sum.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanSumOperation.Undefined">
            <summary>
            Summing type is undefined.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanSumOperation.Addition">
            <summary>
            Plan is summed with (“+”) the other plans in the sum.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PlanSumOperation.Subtraction">
            <summary>
            Plan is subtracted from (“-”) the other plans in the sum.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.DoseValuePresentation">
            <summary>
            Types of presentation for dose values.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.DoseValuePresentation.Relative">
            <summary>The dose as a percentage.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.DoseValuePresentation.Absolute">
            <summary>The dose in Gy or cGy.</summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.VolumePresentation">
            <summary>
            Types of presentation for volume values.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.VolumePresentation.Relative">
            <summary>The volume as a percentage.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.VolumePresentation.AbsoluteCm3">
            <summary>The volume as a cm3.</summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.PatientOrientation">
            <summary>
            The enumeration of patient orientations.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PatientOrientation.NoOrientation">
            <summary>No orientation.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PatientOrientation.HeadFirstSupine">
            <summary>Head first - supine.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PatientOrientation.HeadFirstProne">
            <summary>Head first - prone.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PatientOrientation.HeadFirstDecubitusRight">
            <summary>Head first - decubitus right.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PatientOrientation.HeadFirstDecubitusLeft">
            <summary>Head first - decubitus left.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PatientOrientation.FeetFirstSupine">
            <summary>Feet first - supine.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PatientOrientation.FeetFirstProne">
            <summary>Feet first - prone.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PatientOrientation.FeetFirstDecubitusRight">
            <summary>Feet first - decubitus right.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PatientOrientation.FeetFirstDecubitusLeft">
            <summary>Feet first - decubitus left.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.PatientOrientation.Sitting">
            <summary>Sitting.</summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.SeriesModality">
            <summary>
            The enumeration of series modalities.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.SeriesModality.CT">
            <summary>Computed Tomography (CT).</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.SeriesModality.MR">
            <summary>Magnetic Resonance (MR).</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.SeriesModality.PT">
            <summary>Positron Emission Tomography (PET).</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.SeriesModality.RTIMAGE">
            <summary>Radiotherapy Image.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.SeriesModality.RTSTRUCT">
            <summary>Radiotherapy Structure Set.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.SeriesModality.RTPLAN">
            <summary>Radiotherapy Plan.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.SeriesModality.RTDOSE">
            <summary>Radiotherapy Dose.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.SeriesModality.REG">
            <summary>Registration.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.SeriesModality.Other">
            <summary>Other.</summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.SetupTechnique">
            <summary>
            The enumeration of setup techniques for a beam.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.SetupTechnique.Unknown">
            <summary>Unknown.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.SetupTechnique.Isocentric">
            <summary>Isocentric.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.SetupTechnique.FixedSSD">
            <summary>Fixed SSD.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.SetupTechnique.TBI">
            <summary>TBI.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.SetupTechnique.BreastBridge">
            <summary>Breast Bridge.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.SetupTechnique.SkinApposition">
            <summary>Skin Apposition.</summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.GantryDirection">
            <summary>
            The enumeration of gantry rotation directions.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.GantryDirection.None">
            <summary>None.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.GantryDirection.Clockwise">
            <summary>Clockwise.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.GantryDirection.CounterClockwise">
            <summary>Counterclockwise.</summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.BlockType">
            <summary>
            A type flag that tells whether a block is an aperture block or a shielding
            block. An aperture block is used to limit the radiated area while a
            shielding block is made to protect a sensitive organ.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.BlockType.APERTURE">
            <summary>An aperture block is used to limit the irradiated area.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.BlockType.SHIELDING">
            <summary>A shielding block is made to protect a sensitive organ.</summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.CalculationType">
            <summary>
            Calculation type.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.CalculationType.PhotonVolumeDose">
            <summary>Photon Volume Dose calculation.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.CalculationType.PhotonSRSDose">
            <summary>Photon SRS Dose calculation.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.CalculationType.PhotonIMRTOptimization">
            <summary>Photon IMRT optimization.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.CalculationType.PhotonVMATOptimization">
            <summary>Photon VMAT optimization.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.CalculationType.PhotonLeafMotions">
            <summary>Photon Leaf motion calculation.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.CalculationType.ProtonVolumeDose">
            <summary>Proton Volume Dose calculation.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.CalculationType.DVHEstimation">
            <summary>DVH Estimation.</summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.OptimizationObjectiveOperator">
            <summary>
            Optimization Objective Operator, which is used for setting the upper and lower optimization objectives. 
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.OptimizationObjectiveOperator.Upper">
            <summary>Less than.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.OptimizationObjectiveOperator.Lower">
            <summary>Greater or equal.</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.OptimizationObjectiveOperator.Exact">
            <summary>Exact (target).</summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.OptimizationObjectiveOperator.None">
            <summary>None.</summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.OptimizationOption">
            <summary>
            Options for Optimization.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.OptimizationOption.RestartOptimization">
            <summary>
            Remove the existing optimal fluences from beams before optimization.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.OptimizationOption.ContinueOptimization">
            <summary>
            Use existing optimal fluences as a starting point of optimization.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.OptimizationOption.ContinueOptimizationWithPlanDoseAsIntermediateDose">
            <summary>
            If the plan dose is valid, it is used as an intermediate dose for optimization.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.OptimizationIntermediateDoseOption">
            <summary>
            Options for using intermediate dose in optimization.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.OptimizationIntermediateDoseOption.NoIntermediateDose">
            <summary>
            No intermediate dose for optimization.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.OptimizationIntermediateDoseOption.UseIntermediateDose">
            <summary>
            Use an intermediate dose in optimization.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.OptimizationConvergenceOption">
            <summary>
            Options for terminating optimization upon convergence.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.OptimizationConvergenceOption.NoEarlyTermination">
            <summary>
            Always perform the specified number of iterations.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.OptimizationConvergenceOption.TerminateIfConverged">
            <summary>
            Terminate optimization before the maximum number of iterations is reached if the optimization is already converged.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.DVHEstimateType">
            <summary>
            Represents the type of a DVH estimate curve
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.DVHEstimateType.Upper">
            <summary>
            Upper bound of the estimated DVH curve area
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.DVHEstimateType.Lower">
            <summary>
            Upper bound of the estimated DVH curve area
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.DVHEstimateType.Undefined">
            <summary>
            Undefined estimate curve
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.StructureMarginGeometry">
            <summary>
            Specifies whether a margin operation expands (outer margin) or shrinks (inner margin) the volume.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.StructureMarginGeometry.Outer">
            <summary>
            Specifies that the margin operation expands the volume.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.StructureMarginGeometry.Inner">
            <summary>
            Specifies that the margin operation shrinks the volume.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.AxisAlignedMargins">
            <summary>
            Represents margins aligned to the axes of the image coordinate system, in mm.
            Negative margins are not allowed, but it is possible to specify whether the margins represent an inner or outer margin.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.AxisAlignedMargins.Geometry">
            <summary>
            Specifies whether the margin operation expands (outer margin) or shrinks (inner margin) the volume.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.AxisAlignedMargins.X1">
            <summary>
            A non-negative value defining the margin towards the negative X axis, in mm.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.AxisAlignedMargins.Y1">
            <summary>
            A non-negative value defining the margin towards the negative Y axis, in mm.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.AxisAlignedMargins.Z1">
            <summary>
            A non-negative value defining the margin towards the negative Z axis, in mm.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.AxisAlignedMargins.X2">
            <summary>
            A non-negative value defining the margin towards the positive X axis, in mm.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.AxisAlignedMargins.Y2">
            <summary>
            A non-negative value defining the margin towards the positive Y axis, in mm.
            </summary>
        </member>
        <member name="F:VMS.TPS.Common.Model.Types.AxisAlignedMargins.Z2">
            <summary>
            A non-negative value defining the margin towards the positive Z axis, in mm.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.AxisAlignedMargins.#ctor(VMS.TPS.Common.Model.Types.StructureMarginGeometry,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructs a new AxisAlignedMargins instance. The given margins are aligned to the axes of the image
            coordinate system, in mm.
            </summary>
            <param name="geometry">Specifies whether the margin operation expands (outer margin) or shrinks (inner margin) the volume.</param>
            <param name="x1">A non-negative value defining the margin towards the negative X axis, in mm.</param>
            <param name="y1">A non-negative value defining the margin towards the negative Y axis, in mm.</param>
            <param name="z1">A non-negative value defining the margin towards the negative Z axis, in mm.</param>
            <param name="x2">A non-negative value defining the margin towards the positive X axis, in mm.</param>
            <param name="y2">A non-negative value defining the margin towards the positive Y axis, in mm.</param>
            <param name="z2">A non-negative value defining the margin towards the positive Z axis, in mm.</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.AxisAlignedMargins.ToString">
            <summary>
            A string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:VMS.TPS.Version.VersionInfo">
            <summary>
            This class is a set of constants that specify build version information.
            Generated automatically from TpsNetVersion.in - do not edit by hand.
            The logic is copied from the VFC equivalents in TpsVersion.in.
            Names and identifiers are kept exactly the same as in the original VFC version
            to help in maintenance.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.OptimizationOptionsIMRT">
            <summary>
            Options for IMRT optimization.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.OptimizationOptionsIMRT.#ctor(System.Int32,VMS.TPS.Common.Model.Types.OptimizationOption,System.Int32,VMS.TPS.Common.Model.Types.OptimizationConvergenceOption,System.String)">
            <summary>
            Specify the initial state at the beginning of optimization and use intermediate dose after a specified number of iterations. The user specifies if 
            the calculation terminates upon convergence before the maximum number of iterations is reached. If the intermediate dose is selected, the intermediate dose is calculated 
            at least once. The subsequent cycles may be terminated early if the iteration has been converged.
            </summary>
            <param name="maxIterations">Maximum number of iterations for IMRT optimization.</param>
            <param name="initialState">Initial state at the beginning of optimization.</param>
            <param name="numberOfStepsBeforeIntermediateDose">Number of steps before the intermediate dose is calculated.</param>
            <param name="convergenceOption">Option to terminate optimization early if the iteration is converged.</param>
            <param name="mlcId">Identifier for the Multileaf Collimator (MLC).</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.OptimizationOptionsIMRT.#ctor(System.Int32,VMS.TPS.Common.Model.Types.OptimizationOption,VMS.TPS.Common.Model.Types.OptimizationConvergenceOption,VMS.TPS.Common.Model.Types.OptimizationIntermediateDoseOption,System.String)">
            <summary>
            Specify the initial state at the beginning of optimization and use intermediate dose after a specified number of iterations. The user specifies if 
            the calculation terminates upon convergence before the maximum number of iterations is reached. If the intermediate dose is selected, the intermediate dose is calculated 
            once after which the optimization is restarted. This option is the same as the "Automatic Intermediate Dose" option in External Beam Planning.
            </summary>
            <param name="maxIterations">Maximum number of iterations for IMRT optimization.</param>
            <param name="initialState">Initial state at the beginning of optimization.</param>
            <param name="convergenceOption">Option to terminate optimization early if the iteration is converged.</param>
            <param name="intermediateDoseOption">Specify if intermediate dose is calculated.</param>
            <param name="mlcId">Identifier for the Multileaf Collimator (MLC).</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.OptimizationOptionsIMRT.#ctor(System.Int32,VMS.TPS.Common.Model.Types.OptimizationOption,VMS.TPS.Common.Model.Types.OptimizationConvergenceOption,System.String)">
            <summary>
            Specify the initial state before optimization and whether the algorithm can terminate early if the iteration has already been converged.
            No intermediate dose is used in the optimization.
            </summary>
            <param name="maxIterations">Maximum number of iterations for IMRT optimization.</param>
            <param name="initialState">Initial state at the beginning of optimization.</param>
            <param name="convergenceOption">Option to terminate optimization early if the iteration is converged.</param>
            <param name="mlcId">Identifier for the Multileaf Collimator (MLC).</param>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.OptimizationOptionsIMRT.ConvergenceOption">
            <summary>
            Terminate the optimization early if it is converged.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.OptimizationOptionsIMRT.NumberOfStepsBeforeIntermediateDose">
            <summary>
            Number of steps before the intermediate dose is calculated.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.OptimizationOptionsIMRT.MaximumNumberOfIterations">
            <summary>
            Maximum number of iterations for the IMRT optimizer.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.Fluence">
            <summary>
            Represents the fluence for a beam.
            The resolution in the fluence matrix is 2.5 mm in x and y directions.
            In the fluence matrix, x dimension is the number of columns, and y dimension is the number of rows.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.Fluence.#ctor(System.Single[0:,0:],System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="fluenceMatrix">Contains the pixel values for the fluence.
            x dimension is the number of columns, and y dimension is the number of rows in the matrix.
            The minimum number of rows and columns is 2, and the maximum is 1024.
            For the optimal fluence of a beam, the values in the fluence matrix are floats, 4 bytes per pixel.
            The pixel values are determined as follows: fluence value 1 produces a dose of 1 Gy at the depth of 10 cm in a water phantom with a 10 x 10 cm open field. 
            Correspondingly, fluence value 2 produces 2 Gy, fluence value 3 produces 3 Gy, etc. at the depth of 10 cm in a water phantom with a 10 x 10 cm open field.
            Pixel values are positive.</param>
            <param name="xOrigin">The x coordinate of the first pixel in a fluence map. 
            The value is measured in millimeters from the field isocenter to the center of the first pixel. 
            The coordinate axes are the same as in the IEC BEAM LIMITING DEVICE coordinate system.</param>
            <param name="yOrigin">The y coordinate of the first pixel in a fluence map. 
            The value is measured in millimeters from the field isocenter to the center of the first pixel.
            The coordinate axes are the same as in the IEC BEAM LIMITING DEVICE coordinate system.</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.Fluence.#ctor(System.Single[0:,0:],System.Double,System.Double,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="fluenceMatrix">Contains the pixel values for the fluence.
            x dimension is the number of columns, and y dimension is the number of rows in the matrix.
            The minimum number of rows and columns is 2, and the maximum is 1024.
            The pixel values are determined as follows: fluence value 1 produces a dose of 1 Gy at the depth of 10 cm in a water phantom with a 10 x 10 cm open field. 
            Correspondingly, fluence value 2 produces 2 Gy, fluence value 3 produces 3 Gy, etc. at the depth of 10 cm in a water phantom with a 10 x 10 cm open field.
            Pixel values are positive.</param>
            <param name="xOrigin">The x coordinate of the first pixel in a fluence map. 
            The value is measured in millimeters from the field isocenter to the center of the first pixel. 
            The coordinate axes are the same as in the IEC BEAM LIMITING DEVICE coordinate system.</param>
            <param name="yOrigin">The y coordinate of the first pixel in a fluence map. 
            The value is measured in millimeters from the field isocenter to the center of the first pixel. 
            The coordinate axes are the same as in the IEC BEAM LIMITING DEVICE coordinate system.</param>
            <param name="mlcId">The identifier of the MLC that is related to the fluence. This parameter is optional. 
            If the identifier is empty, the system tries to find the MLC from the treatment unit configuration. 
            This happens when you call one of the <see cref="M:VMS.TPS.Common.Model.API.ExternalPlanSetup.Optimize(System.Int32)">Optimize</see> methods in the
            <see cref="T:VMS.TPS.Common.Model.API.ExternalPlanSetup">ExternalPlanSetup</see>.</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.Fluence.GetPixels">
            <summary>
            Returns the fluence matrix.
            </summary>
            <returns>The pixel values for the fluence as described in <see cref="M:VMS.TPS.Common.Model.Types.Fluence.#ctor(System.Single[0:,0:],System.Double,System.Double)">constructor</see>&gt;.</returns>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.Fluence.MaxSizePixel">
            <summary>
            The maximum size of pixels for x or y dimension in the fluence.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.Fluence.XSizePixel">
            <summary>
            The size of x dimension in pixels for the fluence.
            This corresponds to the number of columns in the pixels matrix.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.Fluence.YSizePixel">
            <summary>
            The size of y dimension in pixels for the fluence.
            This corresponds to the number of rows in the pixels matrix.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.Fluence.XSizeMM">
            <summary>
            The size of x dimension in mm for the fluence.
            The resolution is 2.5 mm in x and y directions.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.Fluence.YSizeMM">
            <summary>
            The size of y dimension in mm for the fluence.
            The resolution is 2.5 mm in x and y directions.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.Fluence.XOrigin">
            <summary>
            The x coordinate of the first pixel in a fluence map. 
            The value is measured in millimeters from the field isocenter to the center of the first pixel. 
            The coordinate axes are the same as in the IEC BEAM LIMITING DEVICE coordinate system.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.Fluence.YOrigin">
            <summary>
            The y coordinate of the first pixel in a fluence map. 
            The value is measured in millimeters from the field isocenter to the center of the first pixel. 
            The coordinate axes are the same as in the IEC BEAM LIMITING DEVICE coordinate system.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.Fluence.MLCId">
            <summary>
            The identifier of the MLC that is related to the fluence. The value can be empty or null.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.ProfilePoint">
            <summary>
            Represents a point of a line profile.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.ProfilePoint.#ctor(VMS.TPS.Common.Model.Types.VVector,System.Double)">
            <summary>
            Constructs a ProfilePoint. 
            </summary>
            <param name="position">Position of the point.</param>
            <param name="value">Value of the point.</param>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.ProfilePoint.Position">
            <summary>
            The position of the point.
            </summary>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.ProfilePoint.Value">
            <summary>
            The value of the point.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.LineProfile">
            <summary>
            Represents values along a line segment.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.LineProfile.#ctor(VMS.TPS.Common.Model.Types.VVector,VMS.TPS.Common.Model.Types.VVector,System.Double[])">
            <summary>
            Constructs a LineProfile.
            </summary>
            <param name="origin">Origin, i.e. position of first point of the profile.</param>
            <param name="step">Step length and direction between points on the profile.</param>
            <param name="data">Array of values of the profile.</param>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.LineProfile.GetEnumerator">
            <summary>
            An enumerator for the points in the profile.
            </summary>
            <returns>Enumerator for points in the profile.</returns>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.LineProfile.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            A non-generic version of the enumerator for the points in the profile.
            </summary>
            <returns>Enumerator for points in the profile.</returns>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.LineProfile.Item(System.Int32)">
            <summary>
            Gets the specified point from the profile.
            </summary>
            <param name="index">Zero based index of the point to retrieve.</param>
            <returns>Point at the given index.</returns>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.LineProfile.Count">
            <summary>
            The number of points in the profile.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.ImageProfile">
            <summary>
            Represents an image line profile.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.ImageProfile.#ctor(VMS.TPS.Common.Model.Types.VVector,VMS.TPS.Common.Model.Types.VVector,System.Double[],System.String)">
            <summary>
            Constructs an ImageProfile.
            </summary>
            <param name="origin">Origin, i.e. position of first point of the profile.</param>
            <param name="step">Step length and direction between points on the profile.</param>
            <param name="data">Array of values of the profile.</param>
            <param name="unit">Unit of values in the profile.</param>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.ImageProfile.Unit">
            <summary>
            The unit of the points on the image profile.
            </summary>
        </member>
        <member name="T:VMS.TPS.Common.Model.Types.DoseProfile">
            <summary>
            Represents a dose profile.
            </summary>
        </member>
        <member name="M:VMS.TPS.Common.Model.Types.DoseProfile.#ctor(VMS.TPS.Common.Model.Types.VVector,VMS.TPS.Common.Model.Types.VVector,System.Double[],VMS.TPS.Common.Model.Types.DoseValue.DoseUnit)">
            <summary>
            Constructs a DoseProfile.
            </summary>
            <param name="origin">Origin, i.e. position of first point of the profile.</param>
            <param name="step">Step length and direction between points on the profile.</param>
            <param name="data">Array of values of the profile.</param>
            <param name="unit">Unit of values in the profile.</param>
        </member>
        <member name="P:VMS.TPS.Common.Model.Types.DoseProfile.Unit">
            <summary>
            The unit of the points on this dose profile.
            </summary>
        </member>
    </members>
</doc>
